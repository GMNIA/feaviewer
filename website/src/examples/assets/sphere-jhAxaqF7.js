import{v as e,a as x,g as A}from"./styles-fAu9ATwT.js";import{p as _}from"./parameters-BXCk-peK.js";const r={radius:{value:e.state(4),min:1,max:20,step:.1},points:{value:e.state(10),min:1,max:20,step:1},circumferences:{value:e.state(10),min:1,max:20,step:1}},d=e.state([]),g=e.state([]);e.derive(()=>{const a=r.radius.value.val,h=r.points.value.val,l=r.circumferences.value.val;let t=[];const M=[];for(let s=0;s<l;s++){const v=.5*Math.PI-Math.PI*s/l,f=1/2*Math.PI-Math.PI*(s+1)/l,u=Math.sin(v)*a,p=Math.sin(f)*a,n=a*Math.cos(Math.asin(u/a)),o=a*Math.cos(Math.asin(p/a));for(let c=0;c<h;c++){const i=Math.PI*2*c/h,m=Math.PI*2*(c+1)/h,I=[Math.cos(i)*n,Math.sin(i)*n,u],P=[Math.cos(m)*n,Math.sin(m)*n,u],b=[Math.cos(i)*o,Math.sin(i)*o,p],w=[Math.cos(m)*o,Math.sin(m)*o,p];t.push(I,P,b,w),M.push([t.length-4,t.length-3],[t.length-4,t.length-2],[t.length-4,t.length-1])}}t=t.map(s=>[10+s[0],10+s[1],s[2]]),d.val=t,g.val=M});document.body.append(_(r),x({structure:{nodes:d,elements:g}}),A({sourceCode:"https://github.com/madil4/awatif/blob/main/examples/src/sphere/main.ts",author:"https://www.linkedin.com/in/madil4/"}));
