import{v as t,a as u}from"./styles-DRihMKwN.js";import{d as v,a as i}from"./deform-2KtVZVFZ.js";import{p}from"./parameters-Bnfkl0sy.js";import"./_commonjsHelpers-IkB594pC.js";const r={xPosition:{value:t.state(600),min:0,max:1e3},zPosition:{value:t.state(0),min:0,max:500}},e=t.state([]),a=t.state([]),o=t.state({}),s=t.state({}),n=t.state({}),l=t.state({});t.derive(()=>{e.val=[[250,0,0],[r.xPosition.value.val,0,r.zPosition.value.val],[250,0,400]],a.val=[[0,1],[1,2]],o.val={supports:new Map([[0,[!0,!0,!0,!0,!0,!0]],[2,[!0,!0,!0,!0,!0,!0]]]),loads:new Map([[1,[0,0,-1e3,0,0,0]]])},s.val={elasticities:new Map([[0,200],[1,200]]),areas:new Map([[0,100],[1,100]])},n.val=v(e.val,a.val,o.val,s.val),l.val=i(e.val,a.val,s.val,n.val)});document.body.append(p(r),u({structure:{nodes:e,elements:a,nodeInputs:o,elementInputs:s,deformOutputs:n,analyzeOutputs:l},settingsObj:{gridSize:1e3}}));
